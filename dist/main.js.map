{"version":3,"sources":["webpack://weather_app/./src/weather.js","webpack://weather_app/webpack/bootstrap","webpack://weather_app/webpack/runtime/compat get default export","webpack://weather_app/webpack/runtime/define property getters","webpack://weather_app/webpack/runtime/hasOwnProperty shorthand","webpack://weather_app/./src/index.js"],"names":["weather","fetchWeather","city","fetch","this","apiKey","then","response","json","data","displayWeather","name","icon","description","main","temp","humidity","speed","wind","document","querySelector","innerText","src","classList","remove","body","style","backgroundImage","search","value","addEventListener","e","key","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call"],"mappings":"sBAAA,IAAIA,EAAU,CACX,OAAU,mCACTC,aAAc,SAAUC,GAAM,WAC5BC,MACG,oDACAD,EACA,UACCE,KAAKC,QAELC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKC,eAAeD,OAI1CC,eAAgB,SAAUD,GAAM,IACvBE,EAASF,EAATE,KADuB,EAEDF,EAAKT,QAAQ,GAAnCY,EAFuB,EAEvBA,KAAMC,EAFiB,EAEjBA,YAFiB,EAGJJ,EAAKK,KAAxBC,EAHuB,EAGvBA,KAAMC,EAHiB,EAGjBA,SACNC,EAAUR,EAAKS,KAAfD,MAIRE,SAASC,cAAc,SAASC,UAAY,cAAgBV,EAC5DQ,SAASC,cAAc,SAASE,IAC9B,qCAAuCV,EAAO,OAC9CO,SAASC,cAAc,gBAAgBC,UAAYR,EACnDM,SAASC,cAAc,SAASC,UAAYN,EAAO,KACnDI,SAASC,cAAc,aAAaC,UAClC,aAAeL,EAAW,IAC5BG,SAASC,cAAc,SAASC,UAC9B,eAAiBJ,EAAQ,QACzBE,SAASC,cAAc,YAAYG,UAAUC,OAAO,YACpDL,SAASM,KAAKC,MAAMC,gBAAkB,sDAAwDhB,EAAO,MAI1GiB,OAAQ,WACPxB,KAAKH,aAAakB,SAASC,cAAc,eAAeS,SAM5DV,SAASC,cAAc,kBAAkBU,iBAAiB,SAAS,WACjE9B,EAAQ4B,YAGVT,SAASC,cAAc,eAAeU,iBAAiB,SAAS,SAASC,GACzD,UAAVA,EAAEC,KACJhC,EAAQ4B,YAIZ5B,EAAQC,aAAa,kBCpDjBgC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,QCpBfJ,EAAoBO,EAAKF,IACxB,IAAIG,EAASH,GAAUA,EAAOI,WAC7B,IAAOJ,EAAiB,QACxB,IAAM,EAEP,OADAL,EAAoBU,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRR,EAAoBU,EAAI,CAACN,EAASQ,KACjC,IAAI,IAAId,KAAOc,EACXZ,EAAoBa,EAAED,EAAYd,KAASE,EAAoBa,EAAET,EAASN,IAC5EgB,OAAOC,eAAeX,EAASN,EAAK,CAAEkB,YAAY,EAAMC,IAAKL,EAAWd,MCJ3EE,EAAoBa,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,G,8BCO9ErD,EAAU,CACZ,OAAU,mCACTC,aAAc,SAAUC,GAAM,WAC5BC,MACG,oDACAD,EACA,UACCE,KAAKC,QAELC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKC,eAAeD,OAI1CC,eAAgB,SAAUD,GAAM,IACvBE,EAASF,EAATE,KADuB,EAEDF,EAAKT,QAAQ,GAAnCY,EAFuB,EAEvBA,KAAMC,EAFiB,EAEjBA,YAFiB,EAGJJ,EAAKK,KAAxBC,EAHuB,EAGvBA,KAAMC,EAHiB,EAGjBA,SACNC,EAAUR,EAAKS,KAAfD,MAIRE,SAASC,cAAc,SAASC,UAAY,cAAgBV,EAC5DQ,SAASC,cAAc,SAASE,IAC9B,qCAAuCV,EAAO,OAC9CO,SAASC,cAAc,gBAAgBC,UAAYR,EACnDM,SAASC,cAAc,SAASC,UAAYN,EAAO,KACnDI,SAASC,cAAc,aAAaC,UAClC,aAAeL,EAAW,IAC5BG,SAASC,cAAc,SAASC,UAC9B,eAAiBJ,EAAQ,QACzBE,SAASC,cAAc,YAAYG,UAAUC,OAAO,YACpDL,SAASM,KAAKC,MAAMC,gBAAkB,sDAAwDhB,EAAO,MAI1GiB,OAAQ,WACPxB,KAAKH,aAAakB,SAASC,cAAc,eAAeS,SAM3DV,SAASC,cAAc,kBAAkBU,iBAAiB,SAAS,WAClE9B,EAAQ4B,YAGTT,SAASC,cAAc,eAAeU,iBAAiB,SAAS,SAASC,GAC1D,UAAVA,EAAEC,KACJhC,EAAQ4B,YAIX5B,EAAQC,aAAa,iB","file":"main.js","sourcesContent":["let weather = {\n   \"apiKey\": \"fc8448ecbdfb7ff960c2d74a2a385fdc\",\n    fetchWeather: function (city) {\n      fetch(\n         \"http://api.openweathermap.org/data/2.5/weather?q=\" + \n         city + \n         \"&appid=\" +\n          this.apiKey\n         )\n         .then((response) => response.json())\n         .then((data) => this.displayWeather(data));\n\n   },\n\n   displayWeather: function (data) {\n    const { name } = data;\n    const { icon, description } = data.weather[0]; \n    const { temp, humidity } = data.main;\n    const { speed } = data.wind;\n   //  const { all } = data.clouds;\n    // console.log(name, icon, description, temp, humidity, speed);\n\n    document.querySelector(\".city\").innerText = \"Weather in \" + name;\n    document.querySelector(\".icon\").src =\n      \"https://openweathermap.org/img/wn/\" + icon + \".png\";\n      document.querySelector(\".description\").innerText = description;\n      document.querySelector(\".temp\").innerText = temp + \"°C\";\n      document.querySelector(\".humidity\").innerText =\n        \"Humidity: \" + humidity + \"%\";\n      document.querySelector(\".wind\").innerText =\n        \"Wind speed: \" + speed + \" km/h\";\n        document.querySelector(\".weather\").classList.remove(\"fetching\");\n        document.body.style.backgroundImage = \"url('https://source.unsplash.com/random/1920x1080/?\" + name + \"')\"\n   },\n\n   // Search function for\n   search: function () {\n    this.fetchWeather(document.querySelector(\".search-bar\").value);\n  },\n};\n\n\n// Events\ndocument.querySelector(\".search button\").addEventListener(\"click\", function () {\n  weather.search();\n});\n\ndocument.querySelector(\".search-bar\").addEventListener(\"keyup\", function(e) {\n  if (e.key === \"Enter\") {\n    weather.search();\n  }\n})\n\nweather.fetchWeather(\"Johannesburg\")","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","\r\n\r\n\r\nimport fetchWeather from'./weather'\r\n\r\n\r\n\r\nlet weather = {\r\n  \"apiKey\": \"fc8448ecbdfb7ff960c2d74a2a385fdc\",\r\n   fetchWeather: function (city) {\r\n     fetch(\r\n        \"http://api.openweathermap.org/data/2.5/weather?q=\" + \r\n        city + \r\n        \"&appid=\" +\r\n         this.apiKey\r\n        )\r\n        .then((response) => response.json())\r\n        .then((data) => this.displayWeather(data));\r\n\r\n  },\r\n\r\n  displayWeather: function (data) {\r\n   const { name } = data;\r\n   const { icon, description } = data.weather[0]; \r\n   const { temp, humidity } = data.main;\r\n   const { speed } = data.wind;\r\n  //  const { all } = data.clouds;\r\n   // console.log(name, icon, description, temp, humidity, speed);\r\n\r\n   document.querySelector(\".city\").innerText = \"Weather in \" + name;\r\n   document.querySelector(\".icon\").src =\r\n     \"https://openweathermap.org/img/wn/\" + icon + \".png\";\r\n     document.querySelector(\".description\").innerText = description;\r\n     document.querySelector(\".temp\").innerText = temp + \"°C\";\r\n     document.querySelector(\".humidity\").innerText =\r\n       \"Humidity: \" + humidity + \"%\";\r\n     document.querySelector(\".wind\").innerText =\r\n       \"Wind speed: \" + speed + \" km/h\";\r\n       document.querySelector(\".weather\").classList.remove(\"fetching\");\r\n       document.body.style.backgroundImage = \"url('https://source.unsplash.com/random/1920x1080/?\" + name + \"')\"\r\n  },\r\n\r\n  // Search function for\r\n  search: function () {\r\n   this.fetchWeather(document.querySelector(\".search-bar\").value);\r\n },\r\n};\r\n\r\n\r\n// Events\r\ndocument.querySelector(\".search button\").addEventListener(\"click\", function () {\r\n weather.search();\r\n});\r\n\r\ndocument.querySelector(\".search-bar\").addEventListener(\"keyup\", function(e) {\r\n if (e.key === \"Enter\") {\r\n   weather.search();\r\n }\r\n})\r\n\r\nweather.fetchWeather(\"Johannesburg\")"],"sourceRoot":""}